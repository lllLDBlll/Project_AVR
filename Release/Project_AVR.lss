
Project_AVR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  00000650  000006e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000650  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  0080011e  0080011e  00000702  2**0
                  ALLOC

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4c 00 	jmp	0x98	; 0x98 <__ctors_end>
   4:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <__vector_1>
   8:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
   c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  10:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  14:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  18:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  1c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  20:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  24:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  28:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  2c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  30:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  34:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  38:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  3c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  40:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  44:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  48:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  4c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  50:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  54:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  58:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  5c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
  60:	0c 94 9f 00 	jmp	0x13e	; 0x13e <__vector_24>
  64:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>

00000068 <conv_Table>:
  68:	40 79 24 30 19 12 02 78 00 18 08 03 46 21 06 0e     @y$0...x....F!..

00000078 <convTable>:
  78:	40 79 24 30 19 12 02 78 00 18 08 03 46 21 06 0e     @y$0...x....F!..

00000088 <convTable_>:
  88:	40 79 24 30 19 12 02 78 00 18 08 03 46 21 06 0e     @y$0...x....F!..

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d8 e0       	ldi	r29, 0x08	; 8
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	e0 e5       	ldi	r30, 0x50	; 80
  ac:	f6 e0       	ldi	r31, 0x06	; 6
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <.do_copy_data_start>

000000b0 <.do_copy_data_loop>:
  b0:	05 90       	lpm	r0, Z+
  b2:	0d 92       	st	X+, r0

000000b4 <.do_copy_data_start>:
  b4:	ae 31       	cpi	r26, 0x1E	; 30
  b6:	b1 07       	cpc	r27, r17
  b8:	d9 f7       	brne	.-10     	; 0xb0 <.do_copy_data_loop>

000000ba <__do_clear_bss>:
  ba:	11 e0       	ldi	r17, 0x01	; 1
  bc:	ae e1       	ldi	r26, 0x1E	; 30
  be:	b1 e0       	ldi	r27, 0x01	; 1
  c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
  c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
  c4:	a9 32       	cpi	r26, 0x29	; 41
  c6:	b1 07       	cpc	r27, r17
  c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
  ca:	0e 94 0e 03 	call	0x61c	; 0x61c <main>
  ce:	0c 94 26 03 	jmp	0x64c	; 0x64c <_exit>

000000d2 <__bad_interrupt>:
  d2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d6 <i2c_write>:
  d6:	91 e0       	ldi	r25, 0x01	; 1
  d8:	90 93 1f 01 	sts	0x011F, r25
  dc:	80 93 21 01 	sts	0x0121, r24
  e0:	60 93 22 01 	sts	0x0122, r22
  e4:	40 93 26 01 	sts	0x0126, r20
  e8:	10 92 20 01 	sts	0x0120, r1
  ec:	80 91 bc 00 	lds	r24, 0x00BC
  f0:	80 62       	ori	r24, 0x20	; 32
  f2:	80 93 bc 00 	sts	0x00BC, r24
  f6:	90 93 24 01 	sts	0x0124, r25
  fa:	8a e0       	ldi	r24, 0x0A	; 10
  fc:	80 93 25 01 	sts	0x0125, r24
 100:	80 91 20 01 	lds	r24, 0x0120
 104:	88 23       	and	r24, r24
 106:	e1 f3       	breq	.-8      	; 0x100 <i2c_write+0x2a>
 108:	08 95       	ret

0000010a <i2c_read>:
 10a:	10 92 1f 01 	sts	0x011F, r1
 10e:	80 93 21 01 	sts	0x0121, r24
 112:	60 93 26 01 	sts	0x0126, r22
 116:	10 92 20 01 	sts	0x0120, r1
 11a:	80 91 bc 00 	lds	r24, 0x00BC
 11e:	80 62       	ori	r24, 0x20	; 32
 120:	80 93 bc 00 	sts	0x00BC, r24
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	80 93 24 01 	sts	0x0124, r24
 12a:	8f ef       	ldi	r24, 0xFF	; 255
 12c:	80 93 25 01 	sts	0x0125, r24
 130:	80 91 20 01 	lds	r24, 0x0120
 134:	88 23       	and	r24, r24
 136:	e1 f3       	breq	.-8      	; 0x130 <i2c_read+0x26>
 138:	80 91 23 01 	lds	r24, 0x0123
 13c:	08 95       	ret

0000013e <__vector_24>:
 13e:	1f 92       	push	r1
 140:	0f 92       	push	r0
 142:	0f b6       	in	r0, 0x3f	; 63
 144:	0f 92       	push	r0
 146:	11 24       	eor	r1, r1
 148:	8f 93       	push	r24
 14a:	9f 93       	push	r25
 14c:	80 91 b9 00 	lds	r24, 0x00B9
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	88 7f       	andi	r24, 0xF8	; 248
 154:	90 70       	andi	r25, 0x00	; 0
 156:	88 31       	cpi	r24, 0x18	; 24
 158:	91 05       	cpc	r25, r1
 15a:	49 f1       	breq	.+82     	; 0x1ae <__vector_24+0x70>
 15c:	89 31       	cpi	r24, 0x19	; 25
 15e:	91 05       	cpc	r25, r1
 160:	3c f4       	brge	.+14     	; 0x170 <__vector_24+0x32>
 162:	88 30       	cpi	r24, 0x08	; 8
 164:	91 05       	cpc	r25, r1
 166:	81 f0       	breq	.+32     	; 0x188 <__vector_24+0x4a>
 168:	40 97       	sbiw	r24, 0x10	; 16
 16a:	09 f0       	breq	.+2      	; 0x16e <__vector_24+0x30>
 16c:	5c c0       	rjmp	.+184    	; 0x226 <__vector_24+0xe8>
 16e:	43 c0       	rjmp	.+134    	; 0x1f6 <__vector_24+0xb8>
 170:	80 34       	cpi	r24, 0x40	; 64
 172:	91 05       	cpc	r25, r1
 174:	09 f4       	brne	.+2      	; 0x178 <__vector_24+0x3a>
 176:	4b c0       	rjmp	.+150    	; 0x20e <__vector_24+0xd0>
 178:	88 35       	cpi	r24, 0x58	; 88
 17a:	91 05       	cpc	r25, r1
 17c:	09 f4       	brne	.+2      	; 0x180 <__vector_24+0x42>
 17e:	4e c0       	rjmp	.+156    	; 0x21c <__vector_24+0xde>
 180:	88 97       	sbiw	r24, 0x28	; 40
 182:	09 f0       	breq	.+2      	; 0x186 <__vector_24+0x48>
 184:	50 c0       	rjmp	.+160    	; 0x226 <__vector_24+0xe8>
 186:	1d c0       	rjmp	.+58     	; 0x1c2 <__vector_24+0x84>
 188:	80 91 1f 01 	lds	r24, 0x011F
 18c:	88 23       	and	r24, r24
 18e:	21 f0       	breq	.+8      	; 0x198 <__vector_24+0x5a>
 190:	80 91 26 01 	lds	r24, 0x0126
 194:	81 60       	ori	r24, 0x01	; 1
 196:	02 c0       	rjmp	.+4      	; 0x19c <__vector_24+0x5e>
 198:	80 91 26 01 	lds	r24, 0x0126
 19c:	80 93 bb 00 	sts	0x00BB, r24
 1a0:	80 91 bc 00 	lds	r24, 0x00BC
 1a4:	8f 7d       	andi	r24, 0xDF	; 223
 1a6:	80 93 bc 00 	sts	0x00BC, r24
 1aa:	82 e0       	ldi	r24, 0x02	; 2
 1ac:	21 c0       	rjmp	.+66     	; 0x1f0 <__vector_24+0xb2>
 1ae:	80 91 21 01 	lds	r24, 0x0121
 1b2:	80 93 bb 00 	sts	0x00BB, r24
 1b6:	83 e0       	ldi	r24, 0x03	; 3
 1b8:	80 93 24 01 	sts	0x0124, r24
 1bc:	10 92 1e 01 	sts	0x011E, r1
 1c0:	71 c0       	rjmp	.+226    	; 0x2a4 <__vector_24+0x166>
 1c2:	80 91 1e 01 	lds	r24, 0x011E
 1c6:	88 23       	and	r24, r24
 1c8:	09 f0       	breq	.+2      	; 0x1cc <__vector_24+0x8e>
 1ca:	64 c0       	rjmp	.+200    	; 0x294 <__vector_24+0x156>
 1cc:	80 91 1f 01 	lds	r24, 0x011F
 1d0:	88 23       	and	r24, r24
 1d2:	41 f0       	breq	.+16     	; 0x1e4 <__vector_24+0xa6>
 1d4:	80 91 22 01 	lds	r24, 0x0122
 1d8:	80 93 bb 00 	sts	0x00BB, r24
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	80 93 1e 01 	sts	0x011E, r24
 1e2:	05 c0       	rjmp	.+10     	; 0x1ee <__vector_24+0xb0>
 1e4:	80 91 bc 00 	lds	r24, 0x00BC
 1e8:	80 62       	ori	r24, 0x20	; 32
 1ea:	80 93 bc 00 	sts	0x00BC, r24
 1ee:	84 e0       	ldi	r24, 0x04	; 4
 1f0:	80 93 24 01 	sts	0x0124, r24
 1f4:	57 c0       	rjmp	.+174    	; 0x2a4 <__vector_24+0x166>
 1f6:	80 91 26 01 	lds	r24, 0x0126
 1fa:	81 60       	ori	r24, 0x01	; 1
 1fc:	80 93 bb 00 	sts	0x00BB, r24
 200:	80 91 bc 00 	lds	r24, 0x00BC
 204:	8f 7d       	andi	r24, 0xDF	; 223
 206:	80 93 bc 00 	sts	0x00BC, r24
 20a:	85 e0       	ldi	r24, 0x05	; 5
 20c:	f1 cf       	rjmp	.-30     	; 0x1f0 <__vector_24+0xb2>
 20e:	80 91 bc 00 	lds	r24, 0x00BC
 212:	8f 7b       	andi	r24, 0xBF	; 191
 214:	80 93 bc 00 	sts	0x00BC, r24
 218:	86 e0       	ldi	r24, 0x06	; 6
 21a:	ea cf       	rjmp	.-44     	; 0x1f0 <__vector_24+0xb2>
 21c:	80 91 bb 00 	lds	r24, 0x00BB
 220:	80 93 23 01 	sts	0x0123, r24
 224:	37 c0       	rjmp	.+110    	; 0x294 <__vector_24+0x156>
 226:	80 91 25 01 	lds	r24, 0x0125
 22a:	81 50       	subi	r24, 0x01	; 1
 22c:	80 93 25 01 	sts	0x0125, r24
 230:	80 91 24 01 	lds	r24, 0x0124
 234:	83 30       	cpi	r24, 0x03	; 3
 236:	89 f0       	breq	.+34     	; 0x25a <__vector_24+0x11c>
 238:	84 30       	cpi	r24, 0x04	; 4
 23a:	28 f4       	brcc	.+10     	; 0x246 <__vector_24+0x108>
 23c:	81 30       	cpi	r24, 0x01	; 1
 23e:	b9 f0       	breq	.+46     	; 0x26e <__vector_24+0x130>
 240:	82 30       	cpi	r24, 0x02	; 2
 242:	21 f5       	brne	.+72     	; 0x28c <__vector_24+0x14e>
 244:	07 c0       	rjmp	.+14     	; 0x254 <__vector_24+0x116>
 246:	85 30       	cpi	r24, 0x05	; 5
 248:	b1 f0       	breq	.+44     	; 0x276 <__vector_24+0x138>
 24a:	85 30       	cpi	r24, 0x05	; 5
 24c:	48 f0       	brcs	.+18     	; 0x260 <__vector_24+0x122>
 24e:	86 30       	cpi	r24, 0x06	; 6
 250:	e9 f4       	brne	.+58     	; 0x28c <__vector_24+0x14e>
 252:	17 c0       	rjmp	.+46     	; 0x282 <__vector_24+0x144>
 254:	80 91 26 01 	lds	r24, 0x0126
 258:	11 c0       	rjmp	.+34     	; 0x27c <__vector_24+0x13e>
 25a:	80 91 21 01 	lds	r24, 0x0121
 25e:	0e c0       	rjmp	.+28     	; 0x27c <__vector_24+0x13e>
 260:	80 91 1f 01 	lds	r24, 0x011F
 264:	88 23       	and	r24, r24
 266:	19 f0       	breq	.+6      	; 0x26e <__vector_24+0x130>
 268:	80 91 22 01 	lds	r24, 0x0122
 26c:	07 c0       	rjmp	.+14     	; 0x27c <__vector_24+0x13e>
 26e:	80 91 bc 00 	lds	r24, 0x00BC
 272:	80 62       	ori	r24, 0x20	; 32
 274:	09 c0       	rjmp	.+18     	; 0x288 <__vector_24+0x14a>
 276:	80 91 26 01 	lds	r24, 0x0126
 27a:	81 60       	ori	r24, 0x01	; 1
 27c:	80 93 bb 00 	sts	0x00BB, r24
 280:	05 c0       	rjmp	.+10     	; 0x28c <__vector_24+0x14e>
 282:	80 91 bc 00 	lds	r24, 0x00BC
 286:	8f 7b       	andi	r24, 0xBF	; 191
 288:	80 93 bc 00 	sts	0x00BC, r24
 28c:	80 91 25 01 	lds	r24, 0x0125
 290:	88 23       	and	r24, r24
 292:	41 f4       	brne	.+16     	; 0x2a4 <__vector_24+0x166>
 294:	80 91 bc 00 	lds	r24, 0x00BC
 298:	80 61       	ori	r24, 0x10	; 16
 29a:	80 93 bc 00 	sts	0x00BC, r24
 29e:	81 e0       	ldi	r24, 0x01	; 1
 2a0:	80 93 20 01 	sts	0x0120, r24
 2a4:	80 91 bc 00 	lds	r24, 0x00BC
 2a8:	80 68       	ori	r24, 0x80	; 128
 2aa:	80 93 bc 00 	sts	0x00BC, r24
 2ae:	9f 91       	pop	r25
 2b0:	8f 91       	pop	r24
 2b2:	0f 90       	pop	r0
 2b4:	0f be       	out	0x3f, r0	; 63
 2b6:	0f 90       	pop	r0
 2b8:	1f 90       	pop	r1
 2ba:	18 95       	reti

000002bc <i2c_init>:
 2bc:	82 e1       	ldi	r24, 0x12	; 18
 2be:	80 93 b8 00 	sts	0x00B8, r24
 2c2:	e9 eb       	ldi	r30, 0xB9	; 185
 2c4:	f0 e0       	ldi	r31, 0x00	; 0
 2c6:	80 81       	ld	r24, Z
 2c8:	81 60       	ori	r24, 0x01	; 1
 2ca:	80 83       	st	Z, r24
 2cc:	85 e8       	ldi	r24, 0x85	; 133
 2ce:	80 93 bc 00 	sts	0x00BC, r24
 2d2:	59 9a       	sbi	0x0b, 1	; 11
 2d4:	2f e1       	ldi	r18, 0x1F	; 31
 2d6:	31 e0       	ldi	r19, 0x01	; 1
 2d8:	c9 01       	movw	r24, r18
 2da:	60 e0       	ldi	r22, 0x00	; 0
 2dc:	70 e0       	ldi	r23, 0x00	; 0
 2de:	48 e0       	ldi	r20, 0x08	; 8
 2e0:	50 e0       	ldi	r21, 0x00	; 0
 2e2:	0e 94 1f 03 	call	0x63e	; 0x63e <memset>
 2e6:	08 95       	ret

000002e8 <SPI_MasterInit>:
 2e8:	8c e2       	ldi	r24, 0x2C	; 44
 2ea:	84 b9       	out	0x04, r24	; 4
 2ec:	81 e7       	ldi	r24, 0x71	; 113
 2ee:	8c bd       	out	0x2c, r24	; 44
 2f0:	08 95       	ret

000002f2 <SPI_Transmit>:
 2f2:	8e bd       	out	0x2e, r24	; 46
 2f4:	0d b4       	in	r0, 0x2d	; 45
 2f6:	07 fe       	sbrs	r0, 7
 2f8:	fd cf       	rjmp	.-6      	; 0x2f4 <SPI_Transmit+0x2>
 2fa:	8e b5       	in	r24, 0x2e	; 46
 2fc:	08 95       	ret

000002fe <SPI_SlaveReceive>:
 2fe:	8e bd       	out	0x2e, r24	; 46
 300:	0d b4       	in	r0, 0x2d	; 45
 302:	07 fe       	sbrs	r0, 7
 304:	fd cf       	rjmp	.-6      	; 0x300 <SPI_SlaveReceive+0x2>
 306:	8e b5       	in	r24, 0x2e	; 46
 308:	08 95       	ret

0000030a <get_usart_stream>:
 30a:	80 e0       	ldi	r24, 0x00	; 0
 30c:	91 e0       	ldi	r25, 0x01	; 1
 30e:	08 95       	ret

00000310 <USART_Init>:
 310:	e0 ec       	ldi	r30, 0xC0	; 192
 312:	f0 e0       	ldi	r31, 0x00	; 0
 314:	95 83       	std	Z+5, r25	; 0x05
 316:	84 83       	std	Z+4, r24	; 0x04
 318:	10 82       	st	Z, r1
 31a:	88 e9       	ldi	r24, 0x98	; 152
 31c:	81 83       	std	Z+1, r24	; 0x01
 31e:	86 e0       	ldi	r24, 0x06	; 6
 320:	82 83       	std	Z+2, r24	; 0x02
 322:	08 95       	ret

00000324 <USART_tx>:
 324:	98 2f       	mov	r25, r24
 326:	80 91 c0 00 	lds	r24, 0x00C0
 32a:	85 ff       	sbrs	r24, 5
 32c:	fc cf       	rjmp	.-8      	; 0x326 <USART_tx+0x2>
 32e:	e0 ec       	ldi	r30, 0xC0	; 192
 330:	f0 e0       	ldi	r31, 0x00	; 0
 332:	96 83       	std	Z+6, r25	; 0x06
 334:	08 95       	ret

00000336 <USART_rx>:
 336:	80 91 c0 00 	lds	r24, 0x00C0
 33a:	87 ff       	sbrs	r24, 7
 33c:	fc cf       	rjmp	.-8      	; 0x336 <USART_rx>
 33e:	80 91 c6 00 	lds	r24, 0x00C6
 342:	08 95       	ret

00000344 <usart_putchar>:
 344:	98 2f       	mov	r25, r24
 346:	80 91 c0 00 	lds	r24, 0x00C0
 34a:	85 ff       	sbrs	r24, 5
 34c:	fc cf       	rjmp	.-8      	; 0x346 <usart_putchar+0x2>
 34e:	e0 ec       	ldi	r30, 0xC0	; 192
 350:	f0 e0       	ldi	r31, 0x00	; 0
 352:	96 83       	std	Z+6, r25	; 0x06
 354:	80 e0       	ldi	r24, 0x00	; 0
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	08 95       	ret

0000035a <DisplaySerial_init>:
 35a:	87 e0       	ldi	r24, 0x07	; 7
 35c:	84 b9       	out	0x04, r24	; 4
 35e:	08 95       	ret

00000360 <DisplaySerial_write>:
 360:	48 2f       	mov	r20, r24
 362:	2a 98       	cbi	0x05, 2	; 5
 364:	a3 e2       	ldi	r26, 0x23	; 35
 366:	b0 e0       	ldi	r27, 0x00	; 0
 368:	60 e4       	ldi	r22, 0x40	; 64
 36a:	7c e9       	ldi	r23, 0x9C	; 156
 36c:	32 c0       	rjmp	.+100    	; 0x3d2 <DisplaySerial_write+0x72>
 36e:	e4 2f       	mov	r30, r20
 370:	ef 70       	andi	r30, 0x0F	; 15
 372:	f0 e0       	ldi	r31, 0x00	; 0
 374:	e8 59       	subi	r30, 0x98	; 152
 376:	ff 4f       	sbci	r31, 0xFF	; 255
 378:	e4 91       	lpm	r30, Z+
 37a:	27 e0       	ldi	r18, 0x07	; 7
 37c:	30 e0       	ldi	r19, 0x00	; 0
 37e:	f0 e0       	ldi	r31, 0x00	; 0
 380:	85 b1       	in	r24, 0x05	; 5
 382:	8d 7f       	andi	r24, 0xFD	; 253
 384:	12 96       	adiw	r26, 0x02	; 2
 386:	8c 93       	st	X, r24
 388:	12 97       	sbiw	r26, 0x02	; 2
 38a:	cf 01       	movw	r24, r30
 38c:	02 2e       	mov	r0, r18
 38e:	02 c0       	rjmp	.+4      	; 0x394 <DisplaySerial_write+0x34>
 390:	95 95       	asr	r25
 392:	87 95       	ror	r24
 394:	0a 94       	dec	r0
 396:	e2 f7       	brpl	.-8      	; 0x390 <DisplaySerial_write+0x30>
 398:	80 ff       	sbrs	r24, 0
 39a:	03 c0       	rjmp	.+6      	; 0x3a2 <DisplaySerial_write+0x42>
 39c:	85 b1       	in	r24, 0x05	; 5
 39e:	81 60       	ori	r24, 0x01	; 1
 3a0:	02 c0       	rjmp	.+4      	; 0x3a6 <DisplaySerial_write+0x46>
 3a2:	85 b1       	in	r24, 0x05	; 5
 3a4:	8e 7f       	andi	r24, 0xFE	; 254
 3a6:	12 96       	adiw	r26, 0x02	; 2
 3a8:	8c 93       	st	X, r24
 3aa:	12 97       	sbiw	r26, 0x02	; 2
 3ac:	cb 01       	movw	r24, r22
 3ae:	01 97       	sbiw	r24, 0x01	; 1
 3b0:	f1 f7       	brne	.-4      	; 0x3ae <DisplaySerial_write+0x4e>
 3b2:	85 b1       	in	r24, 0x05	; 5
 3b4:	82 60       	ori	r24, 0x02	; 2
 3b6:	12 96       	adiw	r26, 0x02	; 2
 3b8:	8c 93       	st	X, r24
 3ba:	12 97       	sbiw	r26, 0x02	; 2
 3bc:	cb 01       	movw	r24, r22
 3be:	01 97       	sbiw	r24, 0x01	; 1
 3c0:	f1 f7       	brne	.-4      	; 0x3be <DisplaySerial_write+0x5e>
 3c2:	21 50       	subi	r18, 0x01	; 1
 3c4:	30 40       	sbci	r19, 0x00	; 0
 3c6:	8f ef       	ldi	r24, 0xFF	; 255
 3c8:	2f 3f       	cpi	r18, 0xFF	; 255
 3ca:	38 07       	cpc	r19, r24
 3cc:	c9 f6       	brne	.-78     	; 0x380 <DisplaySerial_write+0x20>
 3ce:	42 95       	swap	r20
 3d0:	4f 70       	andi	r20, 0x0F	; 15
 3d2:	44 23       	and	r20, r20
 3d4:	61 f6       	brne	.-104    	; 0x36e <DisplaySerial_write+0xe>
 3d6:	2a 9a       	sbi	0x05, 2	; 5
 3d8:	08 95       	ret

000003da <inic_stream>:
 3da:	8e e0       	ldi	r24, 0x0E	; 14
 3dc:	91 e0       	ldi	r25, 0x01	; 1
 3de:	08 95       	ret

000003e0 <cmd_LCD>:
 3e0:	48 2f       	mov	r20, r24
 3e2:	66 23       	and	r22, r22
 3e4:	11 f4       	brne	.+4      	; 0x3ea <cmd_LCD+0xa>
 3e6:	45 98       	cbi	0x08, 5	; 8
 3e8:	01 c0       	rjmp	.+2      	; 0x3ec <cmd_LCD+0xc>
 3ea:	45 9a       	sbi	0x08, 5	; 8
 3ec:	88 b1       	in	r24, 0x08	; 8
 3ee:	94 2f       	mov	r25, r20
 3f0:	92 95       	swap	r25
 3f2:	9f 70       	andi	r25, 0x0F	; 15
 3f4:	80 7f       	andi	r24, 0xF0	; 240
 3f6:	98 2b       	or	r25, r24
 3f8:	98 b9       	out	0x08, r25	; 8
 3fa:	25 e0       	ldi	r18, 0x05	; 5
 3fc:	82 2f       	mov	r24, r18
 3fe:	8a 95       	dec	r24
 400:	f1 f7       	brne	.-4      	; 0x3fe <cmd_LCD+0x1e>
 402:	44 9a       	sbi	0x08, 4	; 8
 404:	82 2f       	mov	r24, r18
 406:	8a 95       	dec	r24
 408:	f1 f7       	brne	.-4      	; 0x406 <cmd_LCD+0x26>
 40a:	44 98       	cbi	0x08, 4	; 8
 40c:	30 ef       	ldi	r19, 0xF0	; 240
 40e:	83 2f       	mov	r24, r19
 410:	8a 95       	dec	r24
 412:	f1 f7       	brne	.-4      	; 0x410 <cmd_LCD+0x30>
 414:	88 b1       	in	r24, 0x08	; 8
 416:	94 2f       	mov	r25, r20
 418:	9f 70       	andi	r25, 0x0F	; 15
 41a:	80 7f       	andi	r24, 0xF0	; 240
 41c:	98 2b       	or	r25, r24
 41e:	98 b9       	out	0x08, r25	; 8
 420:	82 2f       	mov	r24, r18
 422:	8a 95       	dec	r24
 424:	f1 f7       	brne	.-4      	; 0x422 <cmd_LCD+0x42>
 426:	44 9a       	sbi	0x08, 4	; 8
 428:	2a 95       	dec	r18
 42a:	f1 f7       	brne	.-4      	; 0x428 <cmd_LCD+0x48>
 42c:	44 98       	cbi	0x08, 4	; 8
 42e:	3a 95       	dec	r19
 430:	f1 f7       	brne	.-4      	; 0x42e <cmd_LCD+0x4e>
 432:	66 23       	and	r22, r22
 434:	31 f4       	brne	.+12     	; 0x442 <cmd_LCD+0x62>
 436:	44 30       	cpi	r20, 0x04	; 4
 438:	20 f4       	brcc	.+8      	; 0x442 <cmd_LCD+0x62>
 43a:	80 e4       	ldi	r24, 0x40	; 64
 43c:	9f e1       	ldi	r25, 0x1F	; 31
 43e:	01 97       	sbiw	r24, 0x01	; 1
 440:	f1 f7       	brne	.-4      	; 0x43e <cmd_LCD+0x5e>
 442:	08 95       	ret

00000444 <inic_LCD_4bits>:
 444:	3d 9a       	sbi	0x07, 5	; 7
 446:	3c 9a       	sbi	0x07, 4	; 7
 448:	87 b1       	in	r24, 0x07	; 7
 44a:	8f 60       	ori	r24, 0x0F	; 15
 44c:	87 b9       	out	0x07, r24	; 7
 44e:	45 98       	cbi	0x08, 5	; 8
 450:	44 98       	cbi	0x08, 4	; 8
 452:	88 ec       	ldi	r24, 0xC8	; 200
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	20 e9       	ldi	r18, 0x90	; 144
 458:	31 e0       	ldi	r19, 0x01	; 1
 45a:	f9 01       	movw	r30, r18
 45c:	31 97       	sbiw	r30, 0x01	; 1
 45e:	f1 f7       	brne	.-4      	; 0x45c <inic_LCD_4bits+0x18>
 460:	01 97       	sbiw	r24, 0x01	; 1
 462:	d9 f7       	brne	.-10     	; 0x45a <inic_LCD_4bits+0x16>
 464:	88 b1       	in	r24, 0x08	; 8
 466:	80 7f       	andi	r24, 0xF0	; 240
 468:	83 60       	ori	r24, 0x03	; 3
 46a:	88 b9       	out	0x08, r24	; 8
 46c:	95 e0       	ldi	r25, 0x05	; 5
 46e:	89 2f       	mov	r24, r25
 470:	8a 95       	dec	r24
 472:	f1 f7       	brne	.-4      	; 0x470 <inic_LCD_4bits+0x2c>
 474:	44 9a       	sbi	0x08, 4	; 8
 476:	89 2f       	mov	r24, r25
 478:	8a 95       	dec	r24
 47a:	f1 f7       	brne	.-4      	; 0x478 <inic_LCD_4bits+0x34>
 47c:	44 98       	cbi	0x08, 4	; 8
 47e:	20 ef       	ldi	r18, 0xF0	; 240
 480:	82 2f       	mov	r24, r18
 482:	8a 95       	dec	r24
 484:	f1 f7       	brne	.-4      	; 0x482 <inic_LCD_4bits+0x3e>
 486:	e0 e2       	ldi	r30, 0x20	; 32
 488:	fe e4       	ldi	r31, 0x4E	; 78
 48a:	31 97       	sbiw	r30, 0x01	; 1
 48c:	f1 f7       	brne	.-4      	; 0x48a <inic_LCD_4bits+0x46>
 48e:	89 2f       	mov	r24, r25
 490:	8a 95       	dec	r24
 492:	f1 f7       	brne	.-4      	; 0x490 <inic_LCD_4bits+0x4c>
 494:	44 9a       	sbi	0x08, 4	; 8
 496:	89 2f       	mov	r24, r25
 498:	8a 95       	dec	r24
 49a:	f1 f7       	brne	.-4      	; 0x498 <inic_LCD_4bits+0x54>
 49c:	44 98       	cbi	0x08, 4	; 8
 49e:	82 2f       	mov	r24, r18
 4a0:	8a 95       	dec	r24
 4a2:	f1 f7       	brne	.-4      	; 0x4a0 <inic_LCD_4bits+0x5c>
 4a4:	e0 e2       	ldi	r30, 0x20	; 32
 4a6:	f3 e0       	ldi	r31, 0x03	; 3
 4a8:	31 97       	sbiw	r30, 0x01	; 1
 4aa:	f1 f7       	brne	.-4      	; 0x4a8 <inic_LCD_4bits+0x64>
 4ac:	89 2f       	mov	r24, r25
 4ae:	8a 95       	dec	r24
 4b0:	f1 f7       	brne	.-4      	; 0x4ae <inic_LCD_4bits+0x6a>
 4b2:	44 9a       	sbi	0x08, 4	; 8
 4b4:	89 2f       	mov	r24, r25
 4b6:	8a 95       	dec	r24
 4b8:	f1 f7       	brne	.-4      	; 0x4b6 <inic_LCD_4bits+0x72>
 4ba:	44 98       	cbi	0x08, 4	; 8
 4bc:	82 2f       	mov	r24, r18
 4be:	8a 95       	dec	r24
 4c0:	f1 f7       	brne	.-4      	; 0x4be <inic_LCD_4bits+0x7a>
 4c2:	88 b1       	in	r24, 0x08	; 8
 4c4:	80 7f       	andi	r24, 0xF0	; 240
 4c6:	82 60       	ori	r24, 0x02	; 2
 4c8:	88 b9       	out	0x08, r24	; 8
 4ca:	89 2f       	mov	r24, r25
 4cc:	8a 95       	dec	r24
 4ce:	f1 f7       	brne	.-4      	; 0x4cc <inic_LCD_4bits+0x88>
 4d0:	44 9a       	sbi	0x08, 4	; 8
 4d2:	9a 95       	dec	r25
 4d4:	f1 f7       	brne	.-4      	; 0x4d2 <inic_LCD_4bits+0x8e>
 4d6:	44 98       	cbi	0x08, 4	; 8
 4d8:	2a 95       	dec	r18
 4da:	f1 f7       	brne	.-4      	; 0x4d8 <inic_LCD_4bits+0x94>
 4dc:	88 e2       	ldi	r24, 0x28	; 40
 4de:	60 e0       	ldi	r22, 0x00	; 0
 4e0:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <cmd_LCD>
 4e4:	88 e0       	ldi	r24, 0x08	; 8
 4e6:	60 e0       	ldi	r22, 0x00	; 0
 4e8:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <cmd_LCD>
 4ec:	81 e0       	ldi	r24, 0x01	; 1
 4ee:	60 e0       	ldi	r22, 0x00	; 0
 4f0:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <cmd_LCD>
 4f4:	8c e0       	ldi	r24, 0x0C	; 12
 4f6:	60 e0       	ldi	r22, 0x00	; 0
 4f8:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <cmd_LCD>
 4fc:	80 e8       	ldi	r24, 0x80	; 128
 4fe:	60 e0       	ldi	r22, 0x00	; 0
 500:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <cmd_LCD>
 504:	08 95       	ret

00000506 <escreve_LCD>:
 506:	cf 93       	push	r28
 508:	df 93       	push	r29
 50a:	ec 01       	movw	r28, r24
 50c:	04 c0       	rjmp	.+8      	; 0x516 <escreve_LCD+0x10>
 50e:	61 e0       	ldi	r22, 0x01	; 1
 510:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <cmd_LCD>
 514:	21 96       	adiw	r28, 0x01	; 1
 516:	88 81       	ld	r24, Y
 518:	88 23       	and	r24, r24
 51a:	c9 f7       	brne	.-14     	; 0x50e <escreve_LCD+0x8>
 51c:	df 91       	pop	r29
 51e:	cf 91       	pop	r28
 520:	08 95       	ret

00000522 <escreve_LCD_Flash>:
 522:	cf 93       	push	r28
 524:	df 93       	push	r29
 526:	ec 01       	movw	r28, r24
 528:	04 c0       	rjmp	.+8      	; 0x532 <escreve_LCD_Flash+0x10>
 52a:	61 e0       	ldi	r22, 0x01	; 1
 52c:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <cmd_LCD>
 530:	21 96       	adiw	r28, 0x01	; 1
 532:	fe 01       	movw	r30, r28
 534:	84 91       	lpm	r24, Z+
 536:	88 23       	and	r24, r24
 538:	c1 f7       	brne	.-16     	; 0x52a <escreve_LCD_Flash+0x8>
 53a:	df 91       	pop	r29
 53c:	cf 91       	pop	r28
 53e:	08 95       	ret

00000540 <lcd_putchar>:
 540:	61 e0       	ldi	r22, 0x01	; 1
 542:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <cmd_LCD>
 546:	81 e0       	ldi	r24, 0x01	; 1
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	08 95       	ret

0000054c <display_init>:
 54c:	8f e7       	ldi	r24, 0x7F	; 127
 54e:	8a b9       	out	0x0a, r24	; 10
 550:	08 95       	ret

00000552 <display_write>:
 552:	e8 e7       	ldi	r30, 0x78	; 120
 554:	f0 e0       	ldi	r31, 0x00	; 0
 556:	e8 0f       	add	r30, r24
 558:	f1 1d       	adc	r31, r1
 55a:	e4 91       	lpm	r30, Z+
 55c:	eb b9       	out	0x0b, r30	; 11
 55e:	08 95       	ret

00000560 <displaysInit>:
 560:	22 e0       	ldi	r18, 0x02	; 2
 562:	30 e0       	ldi	r19, 0x00	; 0
 564:	08 2e       	mov	r0, r24
 566:	02 c0       	rjmp	.+4      	; 0x56c <displaysInit+0xc>
 568:	22 0f       	add	r18, r18
 56a:	33 1f       	adc	r19, r19
 56c:	0a 94       	dec	r0
 56e:	e2 f7       	brpl	.-8      	; 0x568 <displaysInit+0x8>
 570:	21 50       	subi	r18, 0x01	; 1
 572:	80 93 27 01 	sts	0x0127, r24
 576:	8f ef       	ldi	r24, 0xFF	; 255
 578:	8a b9       	out	0x0a, r24	; 10
 57a:	24 b9       	out	0x04, r18	; 4
 57c:	20 95       	com	r18
 57e:	20 93 28 01 	sts	0x0128, r18
 582:	08 95       	ret

00000584 <displaysWrite>:
 584:	ff 92       	push	r15
 586:	0f 93       	push	r16
 588:	1f 93       	push	r17
 58a:	cf 93       	push	r28
 58c:	df 93       	push	r29
 58e:	48 2f       	mov	r20, r24
 590:	f0 90 27 01 	lds	r15, 0x0127
 594:	50 91 28 01 	lds	r21, 0x0128
 598:	30 e0       	ldi	r19, 0x00	; 0
 59a:	09 e2       	ldi	r16, 0x29	; 41
 59c:	10 e0       	ldi	r17, 0x00	; 0
 59e:	a3 e2       	ldi	r26, 0x23	; 35
 5a0:	b0 e0       	ldi	r27, 0x00	; 0
 5a2:	c1 e0       	ldi	r28, 0x01	; 1
 5a4:	d0 e0       	ldi	r29, 0x00	; 0
 5a6:	60 e4       	ldi	r22, 0x40	; 64
 5a8:	7c e9       	ldi	r23, 0x9C	; 156
 5aa:	1f c0       	rjmp	.+62     	; 0x5ea <displaysWrite+0x66>
 5ac:	e4 2f       	mov	r30, r20
 5ae:	ef 70       	andi	r30, 0x0F	; 15
 5b0:	f0 e0       	ldi	r31, 0x00	; 0
 5b2:	e8 57       	subi	r30, 0x78	; 120
 5b4:	ff 4f       	sbci	r31, 0xFF	; 255
 5b6:	84 91       	lpm	r24, Z+
 5b8:	f8 01       	movw	r30, r16
 5ba:	82 83       	std	Z+2, r24	; 0x02
 5bc:	25 b1       	in	r18, 0x05	; 5
 5be:	ce 01       	movw	r24, r28
 5c0:	03 2e       	mov	r0, r19
 5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <displaysWrite+0x44>
 5c4:	88 0f       	add	r24, r24
 5c6:	99 1f       	adc	r25, r25
 5c8:	0a 94       	dec	r0
 5ca:	e2 f7       	brpl	.-8      	; 0x5c4 <displaysWrite+0x40>
 5cc:	28 2b       	or	r18, r24
 5ce:	12 96       	adiw	r26, 0x02	; 2
 5d0:	2c 93       	st	X, r18
 5d2:	12 97       	sbiw	r26, 0x02	; 2
 5d4:	42 95       	swap	r20
 5d6:	4f 70       	andi	r20, 0x0F	; 15
 5d8:	cb 01       	movw	r24, r22
 5da:	01 97       	sbiw	r24, 0x01	; 1
 5dc:	f1 f7       	brne	.-4      	; 0x5da <displaysWrite+0x56>
 5de:	85 b1       	in	r24, 0x05	; 5
 5e0:	85 23       	and	r24, r21
 5e2:	12 96       	adiw	r26, 0x02	; 2
 5e4:	8c 93       	st	X, r24
 5e6:	12 97       	sbiw	r26, 0x02	; 2
 5e8:	3f 5f       	subi	r19, 0xFF	; 255
 5ea:	3f 15       	cp	r19, r15
 5ec:	f8 f2       	brcs	.-66     	; 0x5ac <displaysWrite+0x28>
 5ee:	df 91       	pop	r29
 5f0:	cf 91       	pop	r28
 5f2:	1f 91       	pop	r17
 5f4:	0f 91       	pop	r16
 5f6:	ff 90       	pop	r15
 5f8:	08 95       	ret

000005fa <__vector_1>:
 5fa:	1f 92       	push	r1
 5fc:	0f 92       	push	r0
 5fe:	0f b6       	in	r0, 0x3f	; 63
 600:	0f 92       	push	r0
 602:	11 24       	eor	r1, r1
 604:	8f 93       	push	r24
 606:	80 91 1c 01 	lds	r24, 0x011C
 60a:	8f 5f       	subi	r24, 0xFF	; 255
 60c:	80 93 1c 01 	sts	0x011C, r24
 610:	8f 91       	pop	r24
 612:	0f 90       	pop	r0
 614:	0f be       	out	0x3f, r0	; 63
 616:	0f 90       	pop	r0
 618:	1f 90       	pop	r1
 61a:	18 95       	reti

0000061c <main>:
 61c:	0e 94 ad 01 	call	0x35a	; 0x35a <DisplaySerial_init>
 620:	8b ef       	ldi	r24, 0xFB	; 251
 622:	8a b9       	out	0x0a, r24	; 10
 624:	84 e0       	ldi	r24, 0x04	; 4
 626:	8b b9       	out	0x0b, r24	; 11
 628:	82 e0       	ldi	r24, 0x02	; 2
 62a:	80 93 69 00 	sts	0x0069, r24
 62e:	81 e0       	ldi	r24, 0x01	; 1
 630:	8d bb       	out	0x1d, r24	; 29
 632:	78 94       	sei
 634:	80 91 1c 01 	lds	r24, 0x011C
 638:	0e 94 b0 01 	call	0x360	; 0x360 <DisplaySerial_write>
 63c:	fb cf       	rjmp	.-10     	; 0x634 <main+0x18>

0000063e <memset>:
 63e:	dc 01       	movw	r26, r24
 640:	01 c0       	rjmp	.+2      	; 0x644 <memset+0x6>
 642:	6d 93       	st	X+, r22
 644:	41 50       	subi	r20, 0x01	; 1
 646:	50 40       	sbci	r21, 0x00	; 0
 648:	e0 f7       	brcc	.-8      	; 0x642 <memset+0x4>
 64a:	08 95       	ret

0000064c <_exit>:
 64c:	f8 94       	cli

0000064e <__stop_program>:
 64e:	ff cf       	rjmp	.-2      	; 0x64e <__stop_program>
